# A simple and functional screenrc
#
#

## vbell kinda sucks but I'm used to it by now.
vbell on
vbell_msg 'wtf?'
# detatch session on SIGHUP
autodetach on
# set alternate screen for things like editors
altscreen on
# message customization
startup_message off
pow_detach_msg "Screen session of \$LOGNAME \$:cr:\$:nl:ended."
# remove flow control since I'm not using a serial line
defflow off
# ignore case in searches
ignorecase on
# set the number of scrollback lines
defscrollback 12000
# bash fix
#windowlist string "%4n %h%=%f"
# Pretty status bar at the bottom.
hardstatus alwayslastline
hardstatus string "%{gk}[ %{G}%H %{g}][%= %{wk}%?%-Lw%?%{r}(%{W}%n*%f %t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{B} %m/%d %{W}%c %{g}]"
# Format a status line color formatting is "%{gk}" for example
# basic format is like this:
# [Hostname][ 0-@ active-win 1 bg-win (3* curr-win) ][mm/dd HH:mm]
# A breakdown of the status line via:
# https://www.gnu.org/software/screen/manual/screen.html#String-Escapes
# %{{gk} [ %{G} %H %{g}} ]  : Print the hostname in bright green inside green brackets
# [ %=                      : Expand to fill all space
# white on key then print lower numbered windows than current window if any
# %{wk} %? %-Lw %?
# Window number, flags and title in white. Append users if any.
# %{r} (%[W] %n *%f %t %?(%u)%?%{r})
# white on key then print higher numbered windows than current window if any
# %{w}%?%+Lw%?%?%=
# Print month/day in blue and 24-h clock in white time inside green brackets
# %{g}][%{B} %m/%d %{W}%c %{g}]

# No screen 0
bind c screen 1
bind ^c screen 1
bind 0 select 10
screen 1

# use 256 color if avalible
term screen-256color
# Mouse scrolling acts like up/down arrow
termcapinfo xterm ti@:te@
#
# change the escape key from a to o
escape ^Oo
#
# remove dangerous and bad bidings
bind k    # kill
bind ^k   # kill
bind ^a	  # remap control char
bind ^Q   # x-on
bind ^f   # flow control
bind ^r   # word wrap
bind  q   # send ctl-q ?
bind ^S   # x-off
bind  s   # split
bind "\\" # quit all windows!
# add some better/more useful bindings
bind 'K' kill
bind 'I' login on
bind 'O' login off
bind '}' history
bind R screen -t root su -

# Bind F11 and F12 (NOT F1 and F2) to previous and next screen window
bindkey -k F1 prev
bindkey -k F2 next
